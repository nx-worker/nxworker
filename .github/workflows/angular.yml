# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: '@nxworker/angular CI pipeline'

env:
  NODE_OPTIONS: --max_old_space_size=4096
  PNPM_STORE_DIRECTORY: ~/.pnpm-store

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_DIRECTORY
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: $PNPM_STORE_DIRECTORY
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-
      - run: pnpm install --frozen-lockfile false --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpm lint

  lint-examples:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_DIRECTORY
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: $PNPM_STORE_DIRECTORY
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-
      - run: pnpm install --frozen-lockfile false --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpm lint-examples

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_DIRECTORY
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: $PNPM_STORE_DIRECTORY
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-
      - run: pnpm install --frozen-lockfile false --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpm test

  test-examples:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_DIRECTORY
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: $PNPM_STORE_DIRECTORY
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-
      - run: pnpm install --frozen-lockfile false --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpm test-examples

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_DIRECTORY
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: $PNPM_STORE_DIRECTORY
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-
      - run: pnpm install --frozen-lockfile false --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpm build
      - uses: actions/upload-artifact@v2
        with:
          name: angular-package
          path: dist/packages/angular
          if-no-files-found: error

  build-examples:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_DIRECTORY
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: $PNPM_STORE_DIRECTORY
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-
      - run: pnpm install --frozen-lockfile false --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpm build-examples

  e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_DIRECTORY
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: $PNPM_STORE_DIRECTORY
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{
            hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-
      - run: pnpm install --frozen-lockfile false --verify-store-integrity false
      - run: pnpm store prune

      - name: Update Chrome
        run: |
          sudo apt-get update
          sudo apt-get --only-upgrade install google-chrome-stable
          google-chrome --version
      - run: pnpm e2e
